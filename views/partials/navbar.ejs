<!-- views/partials/navbar.ejs -->

<header id="headerNav" class="header clearfix">
    <nav class="navbar navbar-expand-lg ">
        <ul class="navbar-nav mr-auto" onclick="trackNavRoute(`logo`,`minifiSite`)">
            <a class="navbar-brand"  href="/"><h3>minifi</h3></a>
            <a class="nav-link"  href="/">
                <li class="nav-item" aria-disabled="true" onclick="trackNavRoute(`Home`,`minifiSite`)">
                    <h3>Home</h3>
                </li>
            </a>
            <!-- <a class="nav-link"  href="/motivate"> -->
            <a class="nav-link"  href="/motivate/new">
                <li class="nav-item" onclick="trackNavRoute(`Motivate`,`minifiSite`)">
                    Motivate
                </li>
            </a>
            <a class="nav-link"  href="/chi">
                <li class="nav-item" onclick="trackNavRoute(`Chi`,`minifiSite`)">
                    Mi Chi
                </li>
            </a>
            <a class="nav-link"  href="/user">
                <li class="nav-item" onclick="trackNavRoute(`User`,`minifiSite`)">
                    User
                </li>
            </a>

            <a class="nav-link"  href="/user/about">
                <li class="nav-item" onclick="trackNavRoute(`About`,`minifiSite`)">
                    About
                </li>
            </a>
            <a class="nav-link"  href="https://lizkane222.github.io/Minifi.github.io/">
                <li class="nav-item" onclick="trackNavRoute(`ghpages`,`minifiSite`)">
                    GH-PAGES
                </li>
            </a>
            <a class="nav-link"  href="/docs">
                <li class="nav-item" onclick="trackNavRoute(`docs`,`minifiSite`)">
                    DOCS
                </li>
            </a>
        </ul>
    </nav>
        <input type="button" onclick="runResetAll()" class="resetUser" value="RESET ALL"/>
        <input type="button" onclick="runResetUserId()" class="resetUser" value="RESET User"/>
        <input type="button" onclick="runResetAnonId()" class="resetUser" value="RESET Anon"/>
        <input type="button" onclick="runResetGroupId()" class="resetUser" value="RESET Grou"/>
        <input type="button" onclick="changeEmployees()" class="resetUser" value="Change Employee"/>
        <input type="button" onclick="changeCompany()" class="resetUser" value="Change Company"/>

</header>


<style>
    #headerNav {
        width: 100%;
        height: 10vh;
        background-color: aquamarine;
        /* display: flex; */
        /* justify-content: space-between; */
        /* overflow:auto; */
    }

    .navbar-nav {
        display: flex;
        flex-direction:row;
        flex-wrap: wrap;
        justify-content: space-evenly;
        overflow: wrap;
    }

    .navbar-brand {
        float: left;
    }
    
    .nav-link {
        font-size: 1.5em;
        display: inline-flex;
        text-align: left;
        margin: 0 10px;
        color:blueviolet;
    }

    .resetUser {
        background-color: aquamarine;  
        color: gainsboro;
        padding: 2.5% .5%;
        border-radius: 50px;
        float: right;
        display: block;
        border: none;
        outline: none;
        margin: 10px;
        z-index: 2;
        color: blueviolet;
        box-shadow: -2px 2px 2px 2px rgba(90,90,90,.7);
    }
    .resetUser:hover {
        transform: scale(1.15);
        transition: 350ms ease-in-out;
    }
  

    button:focus {
        border: none;
        outline: none;
    }

</style>

<script>
   const runResetAll = () => {
        analytics.reset()
        let reloadPage = () => {
            //return window.location.href = "";
            //reload();
            //location.href = thisURL
            location.reload();
        }
        reloadPage()
        console.log("reset has occured");
        console.log("HEADERS ",Headers)
        //location.replace()
        analytics.ready(getPageContext());
    }
    const trackNavRoute = (navLinkName, currentPage) => {
        let properties = {
            navLinkName : navLinkName,
            currentPage : currentPage
        }

        analytics.track('navlink clicked',properties,{integrations: {
            "All": true,
            "Amplitude": {
                session_id: currentSessionId
            }}
        });
    }
    
    const runResetUserId = () => {
        analytics.reset()
        analytics.ready(getPageContext());
        if(serverUserId !== null){
            console.log("resetting userId")
            setCookie("ajs_user_id", null,3)
            serverUserId = null
        }
    }
    const runResetAnonId = () => {
        analytics.reset()
        analytics.ready(getPageContext());
        if(serverAnonymousId !== null){
            console.log("resetting anonymousId")
            setCookie("ajs_anonymous_id", null,3)
            serverAnonymousId = null
        }   
    }
    const runResetGroupId = () => {
        analytics.reset()
        analytics.ready(getPageContext());
        if(groupId !== null){
                console.log("resetting groupId")
                setCookie("ajs_group_id", null,3)
                groupId = null;
                idList = "";
        }
    }

    
</script>